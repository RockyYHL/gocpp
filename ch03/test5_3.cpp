/*
    5.3 常用排序算法
        算法简介：
            sort    // 对容器内元素进行排序
            random_shuffle  // 洗牌，指定范围内的元素随机调整次序
            merge   // 容器元素合并，并存储到另一容器，注意：两个容器必须是有序的
            reverse // 反转指定范围的元素

    5.4 常用的拷贝和替换算法
        算法简介：
            copy    // 容器内指定范围的元素拷贝到另一容器中
            replace // 将容器内指定范围的元素拷贝到另一容器中
            replace_if  // 容器内指定范围满足条件的元素替换为新元素
            swap    //互换两个容器的元素

    5.5 常用的算数生成算法
        注意：
            算数生成算法属于小型算法，使用时包含的头文件为 #include<numeric>
        算法简介：
            accumulate  // 计算容器元素累计总和
            fill    // 向容器中添加元素

    5.6 常用集合算法
        算法简介：
            set_intersection    // 求两个容器的交集，目标容器需要提前开辟空间，取小容器的空间即可
            set_union   //  求两个容器的并集，同样需要开辟空间，特殊情况是两个容器没有交集，并集就是两个容器size相加，返回的值是并集中最后一个元素的位置
            set_difference  //求两个容器的差集，两个集合必须是有序序列，差集的值都是相对于自身的，空间的值取较大容器的空间
*/